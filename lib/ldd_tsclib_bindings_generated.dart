// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `src/ldd_tsclib.h`.
///
/// Regenerate bindings with `dart run ffigen --config ffigen.yaml`.
///
class LddTsclibBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LddTsclibBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LddTsclibBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void openport(
    ffi.Pointer<ffi.Char> str,
  ) {
    return _openport(
      str,
    );
  }

  late final _openportPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'openport');
  late final _openport =
      _openportPtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  void about() {
    return _about();
  }

  late final _aboutPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('about');
  late final _about = _aboutPtr.asFunction<void Function()>();
}
